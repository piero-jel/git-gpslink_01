################################################################################
### Construimos la imagen, dentro del directorio actual:
## docker build -t="jeluccioni/debian-apiweb" -f Dockerfile_debian .
## TEST 
### nos movemos al directorio donde esta el workspace contenido
## cd ..
## docker run --name debian-apirest_ex -i -t -v $PWD/:/home/user:rw jeluccioni/debian-apiweb /bin/bash
## docker start -i debian-apirest_ex
## [... #] cds
## [... #] make help
## [... #] make new
## [... #] make nrun
## [... #] vi project.mk


### volumen only read fiels {ro}
## docker run --name debian-apirest_ex -i -t -v $PWD/:/home/user:ro jeluccioni/debian-apiweb /bin/bash

## docker run --name debian-apiweb_test -i -t jeluccioni/debian-apiweb /bin/bash
## docker run -d -p 80 --name website -v $PWD:/home/user:ro jeluccioni/sample nginx

##########################################################################################################
## -- Debian 2022, docker pull debian
##
### -- docker run debian, crea de forma automatica la ruta '/home/user' para montar el volumen.
## cd ..
### crear container from image 
## docker run --name debian_webapis -i -t -v $PWD/:/home/user:rw debian /bin/bash
### creating container with port p/acces to server rest
## docker run --name debian_webapis -p 8080:8000 -i -t -v $PWD/:/home/user:rw debian /bin/bash
### start container
## docker start -i debian_webapis
### instalccion de package
## [... #] echo "alias cds='cd /home/user/'" >> /root/.bashrc
## [... #] source /root/.bashrc
### add local dir ./ run shel script with out ./
## [... #] echo "export PATH=$PATH:./" >> /root/.bashrc
## [... #] source /root/.bashrc

### all in one cli
## [... #] echo "alias cds='cd /home/user/'" >> /root/.bashrc && echo "export PATH=$PATH:./" >> /root/.bashrc && source /root/.bashrc


### install apps
## [... #] apt-get update
## [... #] apt-get install -y python3
## [... #] apt-get install -y python3-pip
## [... #] python3 -m pip install requests
## [... #] python3 -m pip install flask
## [... #] python3 -m pip install Django djangorestframework
## [... #] python3 -m pip install fastapi
## [... #] python3 -m pip install uvicorn[standard]

## [... #] apt-get install -y 
## [... #] 

##########################################################################################################
#
# Version: 0.0.1
FROM debian
MAINTAINER JELuccioni "jeluccioni@gmail.com"
ENV REFRESHED_AT 2022-08-14

LABEL version="1.0" location="Argentina" type="Dev Ops" role="C/C++"
## <user/> folder in the local to context
#ADD user.tar.gz /home/

## BEGIN tree folders

## END   tree folders

## -- creamos el directorio principal
RUN mkdir -p /home/user

## set enviroment vars:
# BEGIN perl: warning
# LANGUAGE = (unset),
# LC_ALL = (unset),
# LANG = "es_AR"

# export LANGUAGE=en_US.UTF-8
# export LC_ALL=en_US.UTF-8
# export LANG=en_US.UTF-8
# export LC_CTYPE=en_US.UTF-8

# export LANGUAGE=es_AR.UTF-8
# export LC_ALL=es_AR.UTF-8
# export LANG=es_AR.UTF-8
# export LC_CTYPE=es_AR.UTF-8
# END 
ENV LANG=es_AR LANGUAGE=es_AR.UTF-8
#ENV LANGUAGE=es_AR.UTF-8 LC_ALL=es_AR.UTF-8 LANG=es_AR.UTF-8 LC_CTYPE=es_AR.UTF-8
# ENV LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8
# ENV PATH=/home/user/scripts:$PATH LIB_DIR=/home/user/Libraries/lib LIB_INCLUDE=/home/user/Libraries/lib/include
## set ld path
ENV LD_LIBRARY_PATH=/home/user/Libraries/lib:$LD_LIBRARY_PATH

## set alias, no funciona de esta forma
#ENV alias cds='cd /home/user/' alias my='mysql -u $DDBB_USER --password=$DDBB_PWD $DDBB_NAME'
# ENV alias cds='cd /home/user/'
## set alias in root files
RUN echo "alias cds='cd /home/user/'" >> /root/.bashrc

## install packages gcc/g++ gdb make 
RUN apt-get update
RUN apt-get install -y build-essential gdb vim

## tools for automake
RUN apt-get install -y autoconf automake libtool




# RUN apt-get update; apt-get install -y nginx
# RUN echo 'Hi, I am in your container' \
#   >/var/www/html/index.html
# EXPOSE 80
# ENTRYPOINT ["/usr/sbin/nginx", "-g", "daemon off;"]
